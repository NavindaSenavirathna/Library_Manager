# .NET Core specific ignores
*.swp
*.*~
project.lock.json
.DS_Store
*.pyc
nupkg/

# Visual Studio files
.vs/
.vscode/
*.suo
*.user
*.userosscache
*.sln.docstates
*.userprefs
*.dbmdl
*.jfm

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/
msbuild.log
msbuild.err
msbuild.wrn
.builds/
Generated\ Files/
ServiceFabricBackup/
**/*.HTMLClient/
**/*.DesktopClient/
**/*.Server/
**/*.[Pp]ublish.xml
**/*.azurePubxml
**/*.pubxml
**/*.publishproj

# Visual Studio cache/options directory
.vs/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config

# User-specific files
*.rsuser

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding addin-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages Directory
packages/

# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser

# Microsoft Fakes
FakesAssemblies/

# Local History VS Code
.history/
.ionide/

# User secrets
appsettings.*.json
!appsettings.json
!appsettings.Development.json
*.pfx
secrets.json
**/Properties/PublishProfiles/
**/Properties/ServiceDependencies/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# Swagger generated files
**/wwwroot/swagger/
**/wwwroot/api-docs/

# Generated code
*.Generated.cs

# Angular specific - these should go in a separate frontend .gitignore
.angular/
node_modules/
dist/
npm-debug.log

# Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp

# Development settings
.env
.env.local
*.Development.json
!appsettings.Development.json
